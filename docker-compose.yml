version: '2'
services:
  mongo:
   image: mongo
   ports:
     - "27017:27017"

  #zookeeper:
  #  image: wurstmeister/zookeeper
  #  ports:
  #    - "2181:2181"

  #kafka:
  #  image: wurstmeister/kafka
  #  ports:
  #    - "9092:9092"
  #  environment:
  #    KAFKA_ADVERTISED_HOST_NAME: $HOST_IP_ADDR # eg: HOST_IP_ADDR=$(ipconfig getifaddr en0) docker-compose up
  #    KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #    KAFKA_CREATE_TOPICS: "dev.betting:1:1"
  #  volumes:
  #    - /var/run/docker.sock:/var/run/docker.sock
  #  depends_on:
  #    - zookeeper

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      RABBITMQ_DEFAULT_PASS: "rabbitmq"
      RABBITMQ_DEFAULT_USER: "rabbitmq"
      RABBITMQ_DEFAULT_VHOST: "/feedme"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "node_health_check"]
      interval: 20s
      timeout: 10s
      retries: 10
      start_period: 10s
    networks:
      - sky-net

  provider:
    image: sbgfeedme/provider:latest
    ports:
      - "8181:8181"
      - "8282:8282"
    networks:
      - sky-net

  reader:
    build:
      context: .
      dockerfile: reader.Dockerfile
    depends_on:
      provider:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    networks:
      - sky-net

  writer:
    build:
      context: .
      dockerfile: writer.Dockerfile
    networks:
      - sky-net

networks:
  sky-net:
